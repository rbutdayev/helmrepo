apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 5m
  releaseName: loki
  chart:
     spec:
      chart: loki
      version: "5.5.2" 
      sourceRef:
        kind: HelmRepository
        name: loki
        namespace: iomete-system
  values:
      loki:
        auth_enabled: false
        server:
          http_listen_port: 3100
        commonConfig:
          path_prefix: /var/loki
          replication_factor: 1
        storage:
          bucketNames:
            chunks: {{ .Values.loki.assetsBucketName }}
          s3:
            bucketNames: 
              chunks: {{ .Values.loki.assetsBucketName }}
            region: {{ .Values.loki.region }}
            3forcepathstyle: true
        schema_config:
          configs:
          - from: "2022-01-11"
            index:
              period: 24h
              prefix: loki_index_
            store: boltdb-shipper
            object_store: gcs
            schema: v12
        
        storage_config:
          aws:
            s3: s3://{{ .Values.loki.region }}/{{ .Values.loki.assetsBucketName }}
            s3forcepathstyle: true
            # boltdb_shipper:
            # active_index_directory: /var/loki/index
            # shared_store: gcs
        rulerConfig:
          storage:
            type: local
            local:
              directory: /var/loki/rules
      serviceAccount:
        create: true
        name: loki-s3access-sa
        annotations:
          "eks.amazonaws.com/role-arn": {{ .Values.clusterRoleArn | quote }}
      write:
        replicas: 1
      read:
        replicas: 1
      test:
        enabled: false
      backend:
        replicas: 1
      gateway: 
          enabled: true
      lokiLogs:
          enabled: false
      monitoring:
        dashboards:
          enabled: false
        rules:
          enabled: false
        alerts:
          enabled: false
        serviceMonitor:
          enabled: false
        selfMonitoring:
          enabled: false
          lokiCanary:
            enabled: false
          grafanaAgent:
            installOperator: false
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 50m
          memory: 128Mi
      persistence:
        enabled: true
        accessModes:
         - ReadWriteOnce
        size: 20Gi
        storageClassName: gp2
      extraArgs:
          log.level: warn
 

---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  interval: 5m
  releaseName: kube-prometheus-stack
  chart:
     spec:
      chart: kube-prometheus-stack
      version: "47.1.1"
      sourceRef:
        kind: HelmRepository
        name: iomete
        namespace: iomete-system
  values:
      customer: {{ .Values.customer }}
      grafana:
        enabled: true
        grafana.ini:
          users:
            allow_sign_up: false
            auto_assign_org: true
            auto_assign_org_role: Editor
          
          server:
            # The full public facing url you use in browser, used for redirects and emails
            root_url:  "%(protocol)s://%(domain)s:%(http_port)s/monitoring/"
            serve_from_sub_path: true

          auth.anonymous:
            enabled: true
            # Organization name that should be used for unauthenticated users
            org_name: "Main Org."

            # Role for unauthenticated users, other valid values are `Editor` and `Admin`
            org_role: Admin
        # additionalDataSources:
        # - name: Loki
        #   type: loki
        #   url: http://loki-read.monitoring:3100/
        #   access: proxy
        #   isDefault: false
        #   jsonData: {}
        sidecar:
          dashboards:
            enabled: true
            label: grafana_dashboard

            ## Annotations for Grafana dashboard configmaps
            ##
            annotations: {}
          datasources:
            enabled: true
            defaultDatasourceEnabled: true

            ## Annotations for Grafana datasource configmaps
            ##
            annotations: {}

            ## Create datasource for each Pod of Prometheus StatefulSet;
            ## this uses headless service `prometheus-operated` which is
            ## created by Prometheus Operator
            ## ref: https://git.io/fjaBS
            createPrometheusReplicasDatasources: false
            label: grafana_datasource

      prometheus:
       prometheusSpec:
         storageSpec:
           volumeClaimTemplate:
             spec:
               storageClassName: gp2
               accessModes: ["ReadWriteOnce"]
               resources:
                 requests:
                   storage: 50Gi
      alertmanager:
        alertmanagerSpec:
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: gp2
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 50Gi
         
---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus-msteams
  namespace: monitoring
spec:
  dependsOn:
    - name: prometheus
  interval: 5m
  releaseName: prometheus-msteams
  chart:
     spec:
      chart: prometheus-msteams
      version: "1.0.0"
      sourceRef:
        kind: HelmRepository
        name: iomete
        namespace: iomete-system

---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: promtail
  namespace: monitoring
spec:
  interval: 5m
  releaseName: promtail
  chart:
     spec:
      chart: promtail
      version: "6.2.2"
      sourceRef:
        kind: HelmRepository
        name: loki
        namespace: iomete-system
  values:
    config:
      clients:
        - url: http://loki-write:3100/loki/api/v1/push
    tolerations:
    - operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
    - key: node.kubernetes.io/disk-pressure
      operator: Exists
      effect: NoSchedule
    - key: node.kubernetes.io/memory-pressure
      operator: Exists
      effect: NoSchedule
    - key: node.kubernetes.io/pid-pressure
      operator: Exists
      effect: NoSchedule
    - key: node.kubernetes.io/unschedulable
      operator: Exists
      effect: NoSchedule
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
      effect: NoSchedule

         